# -*- mode: ruby -*-
# vi: set ft=ruby :

aliases = "aliases"
script_dir = File.expand_path("scripts", File.dirname(__FILE__))

php_version = "7.2"
php_xml_apt_package = "php7.2-xml"
name = "interview-task-2"
db_name = "interview_task_2"
ip_address_web = "192.168.2.2"
ip_address_redis = "192.168.2.3"
ip_address_rabbitmq = "192.168.2.4"

Vagrant.configure("2") do |config|
  # Set the VM provider
  ENV['VAGRANT_DEFAULT_PROVIDER'] = "virtualbox"

  # Create bash aliases
  if File.exists? aliases
    config.vm.provision "file", source: aliases, destination: "~/.bash_aliases"
  end

  # Check the guest additions when booting this machine
  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.auto_update = false
  end

  # Enable SSH agent forwarding
  config.ssh.forward_agent = true

  # Configure the vagrant box
  config.vm.define name do |devbox|
    devbox.vm.hostname = name
    devbox.vm.box = "damianlewis/ubuntu-16.04-lemp"
    devbox.vm.box_version = ">= 1.0"

    # configure ports
    devbox.vm.network "forwarded_port", guest: 80, host: 8000, auto_correct: true
    devbox.vm.network "forwarded_port", guest: 3306, host: 33060, auto_correct: true

    devbox.vm.network "private_network", ip: ip_address_web

    # VirtualBox settings
    devbox.vm.provider "virtualbox" do |vb|
      vb.name = name
      vb.customize ["modifyvm", :id, "--memory", "2048"]
      vb.customize ["modifyvm", :id, "--cpus", "1"]
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
      vb.customize ["modifyvm", :id, "--ostype", "Ubuntu_64"]
    end

    # TODO get nfs working (issue related to VirtualBox?)
    # devbox.vm.synced_folder "../", "/vagrant/interview-task-2", type: "nfs", mount_options: ['actimeo=1', 'nolock']
    devbox.vm.synced_folder "../", "/vagrant/interview-task-2"

    devbox.vm.provision "shell" do |s|
      s.name = "Installing PHP xml extension from APT package"
      s.path = "#{script_dir}/install-apt-package"
      s.args = php_xml_apt_package
    end

    devbox.vm.provision "shell" do |s|
      s.name = "Restarting PHP-FPM"
      s.inline = "service php#{php_version}-fpm restart > /dev/null 2>&1"
    end

    devbox.vm.provision "shell" do |s|
      s.name = "Installing composer dependencies"
      s.inline = "composer install -d /vagrant/interview-task-2/symfony"
    end

    if devbox.vm.box == "damianlewis/ubuntu-16.04-lemp"
      devbox.vm.provision "shell", run: "always" do |s|
        s.name = "Starting Nginx"
        s.inline = "service nginx restart > /dev/null 2>&1"
      end
    end

    devbox.vm.provision "shell" do |s|
      s.name = "Creating site at #{ip_address_web} with PHP #{php_version}"
      s.path = "#{script_dir}/serve-nginx"
      s.args = ["localhost", "/vagrant/interview-task-2/public_html", php_version]
    end

    devbox.vm.provision "shell" do |s|
      s.name = "Restarting nginx"
      s.inline = "service nginx restart > /dev/null 2>&1"
    end

    # Create all the MySQL database
    devbox.vm.provision "shell" do |s|
      s.name = "Creating MySQL database [#{db_name}]"
      s.path = "#{script_dir}/create-mysql"
      s.args = [db_name, "dev", "secret"]
    end

    devbox.vm.provision "shell" do |s|
      s.name = "Restarting MySQL"
      s.inline = "service mysql restart > /dev/null 2>&1"
    end

    # configure redis
    devbox.vm.network "forwarded_port", guest: 6379, host: 6379, auto_correct: true
    devbox.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--memory", "1024"]
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    end

    devbox.vm.provision "shell", path: "init.sh"

  end

  # config.vm.define "redis" do |redis|
  #   redis.vm.box = "hashicorp/precise64"
  #
  #   redis.vm.network "forwarded_port", guest: 6379, host: 6379, auto_correct: true
  #   redis.vm.network "private_network", ip: ip_address_redis
  #
  #   redis.vm.provider "virtualbox" do |v|
  #     v.customize ["modifyvm", :id, "--memory", "1024"]
  #     v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
  #   end
  #
  #   redis.vm.provision "shell", path: "init.sh"
  # end

  config.vm.define "rabbitmq" do |rabbitmq|
    rabbitmq.vm.box = "ubuntu/bionic64"
    rabbitmq.vm.network "forwarded_port", guest: 5672, host: 5672
    rabbitmq.vm.network "forwarded_port", guest: 15672, host: 15672
    rabbitmq.vm.network "private_network", ip: ip_address_rabbitmq
    # TODO: check all of this shell script is necessary, particularly getting the keys and updating apt
    rabbitmq.vm.provision "shell", inline: <<-SHELL
      sudo apt-key adv --keyserver "hkps.pool.sks-keyservers.net" --recv-keys "0x6B73A36E6026DFCA"
      sudo apt-get install apt-transport-https
      sudo apt-get update -y
      echo 'deb http://www.rabbitmq.com/debian/ testing main' >/etc/apt/sources.list.d/rabbitmq.list
      wget -O - "https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc" | sudo apt-key add -
      wget http://www.rabbitmq.com/rabbitmq-signing-key-public.asc | apt-key add -
      wget -O - "https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey" | sudo apt-key add -
      apt-get update
      apt-get install -q -y rabbitmq-server
      rabbitmq-plugins enable rabbitmq_management
      rabbitmqctl add_user test test
      rabbitmqctl set_user_tags test administrator
      rabbitmqctl set_permissions -p / test ".*" ".*" ".*"
      service rabbitmq-server restart
    SHELL
  end
end