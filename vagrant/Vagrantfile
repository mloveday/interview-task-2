# -*- mode: ruby -*-
# vi: set ft=ruby :

aliases = "aliases"
script_dir = File.expand_path("scripts", File.dirname(__FILE__))

php_version = "7.2"
php_xml_apt_package = "php7.2-xml"
name = "interview-task-2"
db_name = "interview_task_2"
ip_address_web = "192.168.2.1"
ip_address_redis = "192.168.2.2"

Vagrant.configure("2") do |config|
  # Set the VM provider
  ENV['VAGRANT_DEFAULT_PROVIDER'] = "virtualbox"

  # Create bash aliases
  if File.exists? aliases
    config.vm.provision "file", source: aliases, destination: "~/.bash_aliases"
  end

  # Check the guest additions when booting this machine
  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.auto_update = false
  end

  # Enable SSH agent forwarding
  config.ssh.forward_agent = true

  # Configure the vagrant box
  config.vm.define name do |devbox|
    devbox.vm.hostname = name
    devbox.vm.box = "damianlewis/ubuntu-16.04-lemp"
    devbox.vm.box_version = ">= 1.0"

    # configure ports
    devbox.vm.network "forwarded_port", guest: 80, host: 8000, auto_correct: true
    devbox.vm.network "forwarded_port", guest: 3306, host: 33060, auto_correct: true

    devbox.vm.network "private_network", ip: ip_address_web

    # VirtualBox settings
    devbox.vm.provider "virtualbox" do |vb|
      vb.name = name
      vb.customize ["modifyvm", :id, "--memory", "2048"]
      vb.customize ["modifyvm", :id, "--cpus", "1"]
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
      vb.customize ["modifyvm", :id, "--ostype", "Ubuntu_64"]
    end

    # TODO get nfs working (issue related to VirtualBox?)
    # devbox.vm.synced_folder "../", "/vagrant/interview-task-2", type: "nfs", mount_options: ['actimeo=1', 'nolock']
    devbox.vm.synced_folder "../", "/vagrant/interview-task-2"

    devbox.vm.provision "shell" do |s|
      s.name = "Installing PHP xml extension from APT package"
      s.path = "#{script_dir}/install-apt-package"
      s.args = php_xml_apt_package
    end

    devbox.vm.provision "shell" do |s|
      s.name = "Restarting PHP-FPM"
      s.inline = "service php#{php_version}-fpm restart > /dev/null 2>&1"
    end

    devbox.vm.provision "shell" do |s|
      s.name = "Installing composer dependencies"
      s.inline = "composer install -d /vagrant/interview-task-2/symfony"
    end

    if devbox.vm.box == "damianlewis/ubuntu-16.04-lemp"
      devbox.vm.provision "shell", run: "always" do |s|
        s.name = "Starting Nginx"
        s.inline = "service nginx restart > /dev/null 2>&1"
      end
    end

    devbox.vm.provision "shell" do |s|
      s.name = "Creating SSL certificate for #{ip_address_web}"
      s.path = "#{script_dir}/create-ssl-certificate"
      s.args = [ip_address_web]
    end

    devbox.vm.provision "shell" do |s|
      s.name = "Creating site at #{ip_address_web} with PHP #{php_version}"
      s.path = "#{script_dir}/serve-nginx"
      s.args = [ip_address_web, "/vagrant/interview-task-2/public_html", php_version]
    end

    devbox.vm.provision "shell" do |s|
      s.name = "Restarting nginx"
      s.inline = "service $1 restart > /dev/null 2>&1"
      s.args = "nginx"
    end

    # Create all the MySQL database
    devbox.vm.provision "shell" do |s|
      s.name = "Creating MySQL database [#{db_name}]"
      s.path = "#{script_dir}/create-mysql"
      s.args = [db_name, "dev", "secret"]
    end

    devbox.vm.provision "shell" do |s|
      s.name = "Restarting MySQL"
      s.inline = "service mysql restart > /dev/null 2>&1"
    end
  end

  config.vm.define "redis" do |redis|
    redis.vm.box = "hashicorp/precise64"

    redis.vm.network "forwarded_port", guest: 6379, host: 6379, auto_correct: true
    redis.vm.network "private_network", ip: ip_address_redis

    redis.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--memory", "1024"]
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    end

    redis.vm.provision "shell", path: "init.sh"
  end
end