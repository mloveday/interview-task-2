# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    rabbitmq_host: '%env(RABBITMQ_HOST)%'
    rabbitmq_user: '%env(RABBITMQ_USER)%'
    rabbitmq_password: '%env(RABBITMQ_PASSWORD)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Predis\Client:
        class: Predis\Client
        arguments:
            - { host: '%env(REDIS_HOST)%', port: '%env(REDIS_PORT)%' }

    app.listener.rate_limit_generate_key:
        class: App\Listener\RateLimitGenerateKeyListener
        tags:
            - { name: kernel.event_listener, event: 'ratelimit.generate.key', method: 'onGenerateKey' }

    App\Producer\SmsSendProducer: '@old_sound_rabbit_mq.sms_send_producer'
    App\Producer\SmsStoreProducer: '@old_sound_rabbit_mq.sms_store_producer'
    App\Producer\SmsUpdateProducer: '@old_sound_rabbit_mq.sms_update_producer'

    datetime_normalizer:
        class: Symfony\Component\Serializer\Normalizer\DateTimeNormalizer
        public: false
        tags:
            - { name: serializer.normalizer }
    get_set_method_normalizer:
        class: Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer
        public: false
        tags: [serializer.normalizer]